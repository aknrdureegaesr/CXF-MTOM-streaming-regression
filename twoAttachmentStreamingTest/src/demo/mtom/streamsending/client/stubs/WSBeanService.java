
/*
 * 
 */

package demo.mtom.streamsending.client.stubs;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.1
 * Tue May 08 16:54:52 CEST 2012
 * Generated source version: 2.3.1
 * 
 */


@WebServiceClient(name = "WSBeanService", 
                  wsdlLocation = "file:WEB-INF/WSBeanService.wsdl",
                  targetNamespace = "http://server.streamreceiving.mtom.demo/") 
public class WSBeanService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://server.streamreceiving.mtom.demo/", "WSBeanService");
    public final static QName BlobconsumerPort = new QName("http://server.streamreceiving.mtom.demo/", "BlobconsumerPort");
    static {
        URL url = null;
        try {
            url = new URL("file:src/WEB-INF/WSBeanService.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:WEB-INF/WSBeanService.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public WSBeanService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WSBeanService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSBeanService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns Blobconsumer
     */
    @WebEndpoint(name = "BlobconsumerPort")
    public Blobconsumer getBlobconsumerPort() {
        return super.getPort(BlobconsumerPort, Blobconsumer.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Blobconsumer
     */
    @WebEndpoint(name = "BlobconsumerPort")
    public Blobconsumer getBlobconsumerPort(WebServiceFeature... features) {
        return super.getPort(BlobconsumerPort, Blobconsumer.class, features);
    }

}
